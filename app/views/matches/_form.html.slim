#match_form
  = simple_form_for @match do |f|
    .tabbable
      ul.nav.nav-tabs
        li.active.step_1_tab = link_to t(".step_1"), "#step_1", :"data-toggle" => 'tab'
        li class="step_2_tab #{"disabled" if !f.object.can_have_players_set?}" 
          = link_to t(".step_2"), "#step_2", { :"data-toggle" => "#{"tab" if f.object.can_have_players_set?}" }
        li class="step_3_tab #{"disabled" if !f.object.can_have_players_set?}" 
          = link_to t(".step_3"), "#step_3", { :"data-toggle" => "#{"tab" if f.object.can_have_players_set?}" }
        li class="step_4_tab #{"disabled" if !f.object.can_have_players_set?}" 
          = link_to t(".step_4"), "#step_4", { :"data-toggle" => "#{"tab" if f.object.can_have_goals_set?}" }
        
      .tab-content
        .tab-pane.active#step_1
          = render "matches/form_parts/step_1", { f: f }

        .tab-pane#step_2
          = render "matches/form_parts/step_2", { f: f }

        .tab-pane#step_3
          = render "matches/form_parts/step_3", { f: f }     

        .tab-pane#step_4
          = render "matches/form_parts/step_4", { f: f }
   
javascript:
  $(document).ready(function () {
    /* Team name autocomplete */
    $(".team_name").autocomplete({
      source: function (request, response) {
        $.getJSON("/teams/search", {
          name: request.term,
        }, response );
      },
      minLength: 2,
      select: function(event, ui) {
        var logoElement = $(this).closest(".team_details").find(".logo img");
        var scoreLogoElement = $(this).closest("#match_form").find(".match_score");

        if ($(this).attr("id") == "match_home_team_name") {
          scoreLogoElement = $(scoreLogoElement).find(".home_team_logo img");
        }
        else {
          scoreLogoElement = $(scoreLogoElement).find(".away_team_logo img");
        }

        $(logoElement).hide().attr("src", ui.item.logo).fadeIn();
        $(scoreLogoElement).hide().attr("src", ui.item.logo_thumb).fadeIn();
      },
      search: function () {
        $(this).closest(".team_details").find(".loading").show();
      },
      open: function () {
        $(this).closest(".team_details").find(".loading").hide();
      },
      response: function(event, ui) {
        if (!ui.content.length) {
          var noResult = { value: "no-results" };
          ui.content.push(noResult);
        }
      }
    })
    .each(function (i) {
      $(this).data("ui-autocomplete")._renderItem = function(ul, item) {
        if (item.value == "no-results") {
          return $( "<li> ").append("<span class='padder'>#{t('no_results')}</span>").appendTo(ul);
        }
        return $( "<li>" )
          .append( "<a> <img src='" + item.logo_mini + "'></img>" + item.name + "</a>" )
          .appendTo( ul );
      };
    });
        
    /* Player name autocomplete */
    $(".player_name").autocomplete({
      source: function (request, response) {
        $.getJSON("/search_by_player", {
          name: request.term,
        }, response );
      },
      minLength: 2,
      select: function(event, ui) {
        $(this).closest(".player").find(".player_id").val(ui.item.id);    
      },
      search: function () {
        $(this).closest(".player").find(".loading").show();
      },
      open: function () {
        $(this).closest(".player").find(".loading").hide();
      },
      response: function(event, ui) {
        if (!ui.content.length) {
          var noResult = { value: "no-results" };
          ui.content.push(noResult);
        }
      }
    })
    .each(function (i) {
      $(this).data("ui-autocomplete")._renderItem = function(ul, item) {
        if (item.value == "no-results") {
          return $( "<li> ").append("<span class='padder'>#{t('no_results')}</span>").appendTo(ul);
        }
        return $( "<li>" )
          .append( "<a> <span style='display:inline-block;' class='flag flag-" + item.country_code + "'></span> <b>" + item.name + "</b>, " + item.full_name + " (" + item.birthday + ")" + "</a>" )
          .appendTo( ul );
      };
    });
    
    /* Competition name autocomplete */
    $(".competition_name").autocomplete({
      source: function (request, response) {
        $.getJSON("/competitions/search", {
          name: request.term,
        }, response );
      },
      minLength: 2,
    });
    
    /* Add reserves */
    $("#match_form").on("click", ".add_reserves", function (e) {
      $(this).next().fadeIn();
      $(this).remove();
      e.preventDefault();
    });

    /* Delete players */
    $("#match_form").on("click", ".delete_player", function (e) {
      $(this).parents(".player").find("input").val("");
      $(this).parents(".player").find("input").removeAttr("disabled")
      e.preventDefault();
    });

    $("form").bind("submit", function() {
      $(this).find(':disabled').removeAttr('disabled');
    });

    /* Steps */
    $(".form_buttons .next_step, .form_buttons .prev_step").on("click", function (e) {
      var target = $(this).attr("href");

      /* Enable step 2 if both teams are set */
      if (target == "#step_2" && $("#match_home_team_name").val() && $("#match_away_team_name").val()) {
        $(".nav-tabs .step_2_tab, .nav-tabs .step_3_tab").removeClass("disabled").find("a").attr("data-toggle", "tab");
      }
      $(".nav-tabs a[href='" + target + "']").trigger("click");
    });

   });

- if @step.present?
  javascript:
    $(document).ready(function () {
      $(".nav-tabs a[href='#step_#{@step}']").trigger("click");
    });
