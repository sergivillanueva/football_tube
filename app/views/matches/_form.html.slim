#match_form
  = simple_form_for @match do |f|
    .teams.clearfix
      .team_details
        .logo.blank
          - if f.object.home_team.present?
            = f.object.decorate.home_team_logo
          - else
            img style="display:none;"
        = f.input :home_team_name, input_html: { class: "team_name", value: f.object.home_team.present? ? f.object.home_team.name : "" }
      .team_details
        .logo.blank
          - if f.object.away_team.present?
            = f.object.decorate.away_team_logo
          - else
            img style="display:none;"
        = f.input :away_team_name, input_html: { class: "team_name", value: f.object.away_team.present? ? f.object.away_team.name : ""  }
    = f.input :home_score
    = f.input :away_score
    = f.input :competition_name, input_html: { class: "competition_name", value: f.object.competition.present? ? f.object.competition.name : "" }
    = f.input :leg
    = f.input :season, collection: options_for_match_season
    = f.input :venue
    = f.input :playing_date, start_year: 1900
    = f.input :language, as: :select, collection: languages_for_select

    - unless @match.new_record?
      h3 = t(".goals")
      = f.simple_fields_for :goals do |g|
        .row
          = g.association :player, collection: @match.players.map{|p| [p.name, p.id]}, selected: lambda {|l| l[0] == g.object.player.try(:name)}, include_blank: true, wrapper_html: { class: "span3" }, input_html: { style: "width:100%;"}, label: t(".player")
          = g.input :minute, wrapper_html: { class: "span1" }, input_html: { style: "width:100%;"}
          = g.input :own_goal, as: :boolean, wrapper_html: { class: "span1" }
    
    .players.clearfix
      .home_players
        .starters
          h3 = t(".line_up")
          = f.simple_fields_for :home_starters do |g|
            .player class=g.object.role
              .row
                = g.input :player_name, input_html: { class: "player_name", style: "width:100%;", value: g.object.player.present? ? g.object.player.name : "" }, label: false, placeholder: "Player name", wrapper_html: { class: "span3" }
                = g.input :team_number, label: false, placeholder: "Team no.", wrapper_html: { class: "span1" }, input_html: { style: "width:100%;"}
              = g.input :side, as: :hidden
              = g.input :role, as: :hidden
              = g.input :player_id, as: :hidden, input_html: { class: "player_id" }

        = link_to t(".add_reserves"), "#", class: "add_reserves"
        .reserves style="display:none;"
          h3 = t(".reserves")
          = f.simple_fields_for :home_reserves do |g|
            .player class=g.object.role
              .row
                = g.input :player_name, input_html: { class: "player_name", style: "width:100%;", value: g.object.player.present? ? g.object.player.name : "" }, label: false, placeholder: "Player name", wrapper_html: { class: "span3" }
                = g.input :team_number, label: false, placeholder: "Team no.", wrapper_html: { class: "span1" }, input_html: { style: "width:100%;"}              
              = g.input :side, as: :hidden
              = g.input :role, as: :hidden
              = g.input :player_id, as: :hidden, input_html: { class: "player_id" }

        .coach
          h3 = t(".coach")
          = f.simple_fields_for :home_coach do |g|
            .player class=g.object.role
              = g.input :player_name, input_html: { class: "player_name", value: g.object.player.present? ? g.object.player.name : "" }, label: false
              = g.input :side, as: :hidden
              = g.input :role, as: :hidden
              = g.input :player_id, as: :hidden, input_html: { class: "player_id" }
                   
      .away_players
        .starters
          h3 = t(".line_up")
          = f.simple_fields_for :away_starters do |g|
            .player class=g.object.role
              .row
                = g.input :player_name, input_html: { class: "player_name", style: "width:100%;", value: g.object.player.present? ? g.object.player.name : "" }, label: false, placeholder: "Player name", wrapper_html: { class: "span3" }
                = g.input :team_number, label: false, placeholder: "Team no.", wrapper_html: { class: "span1" }, input_html: { style: "width:100%;"}
              = g.input :side, as: :hidden
              = g.input :role, as: :hidden
              = g.input :player_id, as: :hidden, input_html: { class: "player_id" }
              
        = link_to t(".add_reserves"), "#", class: "add_reserves"
        .reserves style="display:none;"
          h3 = t(".reserves")
          = f.simple_fields_for :away_reserves do |g|
            .player class=g.object.role
              .row
                = g.input :player_name, input_html: { class: "player_name", style: "width:100%;", value: g.object.player.present? ? g.object.player.name : "" }, label: false, placeholder: "Player name", wrapper_html: { class: "span3" }
                = g.input :team_number, label: false, placeholder: "Team no.", wrapper_html: { class: "span1" }, input_html: { style: "width:100%;"}              
              = g.input :side, as: :hidden
              = g.input :role, as: :hidden
              = g.input :player_id, as: :hidden, input_html: { class: "player_id" }

        .coach
          h3 = t(".coach")
          = f.simple_fields_for :away_coach do |g|
            .player class=g.object.role
              = g.input :player_name, input_html: { class: "player_name", value: g.object.player.present? ? g.object.player.name : "" }, label: false
              = g.input :side, as: :hidden
              = g.input :role, as: :hidden
              = g.input :player_id, as: :hidden, input_html: { class: "player_id" }
              
    = f.button :submit, class: "btn-primary"
    = link_to "Cancel", root_path, class: "btn btn-default"
   
javascript:
  $(document).ready(function () {
    /* Team name autocomplete */
    $(".team_name").autocomplete({
      source: function (request, response) {
        $.getJSON("/teams/search", {
          name: request.term,
        }, response );
      },
      minLength: 2,
      select: function(event, ui) {
        var logoElement = $(this).closest(".team_details").find(".logo img");
        $(logoElement).hide().attr("src", ui.item.logo).fadeIn();                
      }      
    })
    .each(function (i) {
      $(this).data("ui-autocomplete")._renderItem = function(ul, item) {
        return $( "<li>" )
          .append( "<a> <img src='" + item.logo_mini + "'></img>" + item.name + "</a>" )
          .appendTo( ul );
      };
    });
        
    /* Player name autocomplete */
    $(".player_name").autocomplete({
      source: function (request, response) {
        $.getJSON("/players/search", {
          name: request.term,
        }, response );
      },
      minLength: 2,
      select: function(event, ui) {
        $(this).closest(".player").find(".player_id").val(ui.item.id);    
      }
    })
    .each(function (i) {
      $(this).data("ui-autocomplete")._renderItem = function(ul, item) {
        return $( "<li>" )
          .append( "<a> <span style='display:inline-block;' class='flag flag-" + item.country_code + "'></span> <b>" + item.name + "</b>, " + item.full_name + " (" + item.birthday + ")" + "</a>" )
          .appendTo( ul );
      };
    });
    
    /* Competition name autocomplete */
    $(".competition_name").autocomplete({
      source: function (request, response) {
        $.getJSON("/competitions/search", {
          name: request.term,
        }, response );
      },
      minLength: 2,
    });
    
    /* Add reserves */
    $("#match_form").on("click", ".add_reserves", function (e) {
      $(this).next().fadeIn();
      $(this).remove();
      e.preventDefault();
    });
   });
